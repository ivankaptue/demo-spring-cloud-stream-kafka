server:
  port: 8082
spring:
  cloud:
    stream:
      bindings:
        NotificationListener-in-0:
          destination: notification-event-v1
          group: notification-event-group-id-v1
          binder: kafka
          consumer:
            use-native-decoding: true
            concurrency: 3
            autoCommitOffset: false
            ackEachRecord: true
            ackMode: MANUAL_IMMEDIATE
            startOffset: latest
            resetOffsets: true
      binders:
        kafka:
          type: kafka
          environment:
            spring:
              cloud:
                stream:
                  kafka:
                    binder:
                      brokers: localhost:9092,localhost:9093,localhost:9094
                      configuration:
                        ackMode: MANUAL_IMMEDIATE
                      consumer-properties:
                        key.deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
                        value.deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
                        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
                        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
                        spring.json.trusted.packages: '*'
                        spring.json.type.mapping: 'com.klid.demospringcloudstreamkafkaproducer.Notification:com.klid.demospringcloudstreamkafkaconsumer.Notification'
#                        auto.offset.reset: earliest
#                        enable.auto.commit: false

